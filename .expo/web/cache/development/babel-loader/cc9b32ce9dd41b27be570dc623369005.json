{"ast":null,"code":"global.swisscalc = global.swisscalc || {};\nglobal.swisscalc.lib = global.swisscalc.lib || {};\n\nglobal.swisscalc.lib.format = function () {};\n\nglobal.swisscalc.lib.format.groupDigits = function (number) {\n  var parts = number.toString().split(\".\");\n  parts[0] = parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n  return parts.join(\".\");\n};\n\nglobal.swisscalc.lib.format.asUSCurrency = function (number) {\n  var s = number.toFixed(2);\n  s = global.swisscalc.lib.format.groupDigits(s);\n  return s.charAt(0) == \"-\" ? \"-$\" + s.substring(1) : \"$\" + s;\n};","map":{"version":3,"sources":["C:/Users/dmitr/Desktop/ReactNative/Codempire/lib/swisscalc.lib.format.js"],"names":["global","swisscalc","lib","format","groupDigits","number","parts","toString","split","replace","join","asUSCurrency","s","toFixed","charAt","substring"],"mappings":"AAKAA,MAAM,CAACC,SAAP,GAAmBD,MAAM,CAACC,SAAP,IAAoB,EAAvC;AACAD,MAAM,CAACC,SAAP,CAAiBC,GAAjB,GAAuBF,MAAM,CAACC,SAAP,CAAiBC,GAAjB,IAAwB,EAA/C;;AACAF,MAAM,CAACC,SAAP,CAAiBC,GAAjB,CAAqBC,MAArB,GAA8B,YAAW,CAAE,CAA3C;;AAGAH,MAAM,CAACC,SAAP,CAAiBC,GAAjB,CAAqBC,MAArB,CAA4BC,WAA5B,GAA0C,UAASC,MAAT,EAAiB;AAE1D,MAAIC,KAAK,GAAGD,MAAM,CAACE,QAAP,GAAkBC,KAAlB,CAAwB,GAAxB,CAAZ;AACAF,EAAAA,KAAK,CAAC,CAAD,CAAL,GAAWA,KAAK,CAAC,CAAD,CAAL,CAASG,OAAT,CAAiB,uBAAjB,EAA0C,GAA1C,CAAX;AACA,SAAOH,KAAK,CAACI,IAAN,CAAW,GAAX,CAAP;AACA,CALD;;AAQAV,MAAM,CAACC,SAAP,CAAiBC,GAAjB,CAAqBC,MAArB,CAA4BQ,YAA5B,GAA2C,UAASN,MAAT,EAAiB;AAC3D,MAAIO,CAAC,GAAGP,MAAM,CAACQ,OAAP,CAAe,CAAf,CAAR;AACAD,EAAAA,CAAC,GAAGZ,MAAM,CAACC,SAAP,CAAiBC,GAAjB,CAAqBC,MAArB,CAA4BC,WAA5B,CAAwCQ,CAAxC,CAAJ;AACA,SAAQA,CAAC,CAACE,MAAF,CAAS,CAAT,KAAe,GAAhB,GAAuB,OAAOF,CAAC,CAACG,SAAF,CAAY,CAAZ,CAA9B,GAA+C,MAAMH,CAA5D;AACA,CAJD","sourcesContent":["//\r\n// Eric Morgan\r\n// Copyright (c) 2014. \r\n//\r\n\r\nglobal.swisscalc = global.swisscalc || {};\r\nglobal.swisscalc.lib = global.swisscalc.lib || {};\r\nglobal.swisscalc.lib.format = function() {};\r\n\r\n// Adds commas to the given numeric-string to group digits.\r\nglobal.swisscalc.lib.format.groupDigits = function(number) {\r\n\t// http://stackoverflow.com/questions/2901102/how-to-print-a-number-with-commas-as-thousands-separators-in-javascript/2901298#2901298\r\n\tvar parts = number.toString().split(\".\");\r\n\tparts[0] = parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n\treturn parts.join(\".\");\r\n};\r\n\r\n// Formats the given number as a US currency string\r\nglobal.swisscalc.lib.format.asUSCurrency = function(number) {\r\n\tvar s = number.toFixed(2);\r\n\ts = global.swisscalc.lib.format.groupDigits(s);\r\n\treturn (s.charAt(0) == \"-\")\t? \"-$\" + s.substring(1)\t: \"$\" + s;\r\n};"]},"metadata":{},"sourceType":"script"}